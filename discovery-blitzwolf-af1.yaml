blueprint:
  name: 'Tasmota Zigbee autodiscovery devices'
  description: |
    Set up a Blitzwolf BW-AF1 air fryer in Home Assistant. Blog post with [instructions](https://blakadder.com/bw-af1-in-home-assistant).
    
    Requires rules configured in Tasmota. See device template page for rules: [Blitzwolf BW-AF1 Air Fryer](https://templates.blakadder.com/blitzwolf_BW-AF1.html)

  domain: automation
  input:
    topic:
      name: Tasmota MQTT Topic 
      description: "Found in Information tab of the webUI. Warning, it is case sensitive!"
      selector: 
        text:
    mac_address:
      name: Tasmota MAC Address
      description: "Found in Tasmota webUI Information tab."

mode: single
max_exceeded: silent


trigger_variables:
  topic: !input topic
trigger:
  - platform: mqtt
    topic: {{topic}}
variables:
  topic: !input topic
  mac_address: !input mac_address
  code: "{{(trigger.payload_json.ZbReceived.keys() | list)[0]}}"
  statetopic: tele/zigbee/{{code}}
  availabilitytopic: tele/tasmota_04D2FC/LWT
  payloadavv: Online
  payloadunavv: Offline
  gendeviceid: 04D2FC{{code}}
  triggervalues: "{{trigger.payload_json.ZbReceived[code]}}"
  triggerkeys: "{{((trigger.payload_json.ZbReceived.values() | list)[0].keys() | list)}}"
  sensoroptions: >
    {% set options = "{" %}
    {% if 'Temperature' in triggerkeys %}
      {% set options = (options)+'"temperature":{"payload": {
          "device_class": "temperature","name": "Temperature","state_topic":"'+(statetopic)+'/Temperature",
          "unit_of_measurement": "Â°C","unique_id": "'+(code)+'.temp.sensor","availability_topic": "'+(availabilitytopic)+'",
          "payload_available": "'+(payloadavv)+'",
          "payload_not_available": "'+(payloadunavv)+'",
          "dev": {"ids": ["'+(gendeviceid)+'"],"name": "safasdasdas"}
        }},' %}
    {% endif %}
    {% if 'Humidity' in triggerkeys %}
      {% set options = (options)+'"humidity":{"payload": {
          "device_class": "humidity","name": "Humidity","state_topic":"'+(statetopic)+'/Humidity",
          "unit_of_measurement": "%","unique_id": "'+(code)+'.humid.sensor","availability_topic": "'+(availabilitytopic)+'",
          "payload_available": "'+(payloadavv)+'","payload_not_available": "'+(payloadunavv)+'",
          "dev": {"ids": ["'+(gendeviceid)+'"],"name": "safasdasdas"}
        }},' %}
    {% endif %}
    {% if 'BatteryPercentage' in triggerkeys %}
      {% set options = (options)+'"battpercent":{"payload": {
          "device_class": "battery","name": "BatteryPercentage","state_topic":"'+(statetopic)+'/BatteryPercentage",
          "unit_of_measurement": "%","unique_id": "'+(code)+'.batteryp.sensor","availability_topic": "'+(availabilitytopic)+'",
          "payload_available": "'+(payloadavv)+'","payload_not_available": "'+(payloadunavv)+'",
          "dev": {"ids": ["'+(gendeviceid)+'"],"name": "safasdasdas"}
        }},' %}
    {% endif %}
    {% if options.endswith(',') %}
      {% set options = options[:-1] %}
    {% endif %}
    {% set options = (options)+"}" %}
    {% set converted = (options) |from_json  %}
    {{options}}
action:
  choose:
    - conditions:
        - condition: template
          value_template: "{{ 'Humidity' in triggerkeys }}\n"
      sequence:
        - service: mqtt.publish
          data_template:
            retain: false
            topic: homeassistant/sensor/{{code}}{{sensoroptions.humidity.payload.name}}/config
            payload: |
              {{sensoroptions.humidity.payload|to_json }}
        - service: mqtt.publish
          data_template:
            topic: "{{statetopic}}/{{sensoroptions.humidity.payload.name}}"
            payload: "{{triggervalues[sensoroptions.humidity.payload.name]}}\n"
            retain: false
    - conditions:
        - condition: template
          value_template: "{{ 'Temperature' in triggerkeys }}\n"
      sequence:
        - service: mqtt.publish
          data_template:
            retain: false
            topic: homeassistant/sensor/{{code}}{{sensoroptions.temperature.payload.name}}/config
            payload: |
              {{sensoroptions.temperature.payload|to_json }}
        - service: mqtt.publish
          data_template:
            topic: "{{statetopic}}/{{sensoroptions.temperature.payload.name}}"
            payload: "{{triggervalues[sensoroptions.temperature.payload.name]}}\n"
            retain: false
    - conditions:
        - condition: template
          value_template: "{{ 'BatteryPercentage' in triggerkeys }}\n"
      sequence:
        - service: mqtt.publish
          data_template:
            retain: false
            topic: homeassistant/sensor/{{code}}{{sensoroptions.battpercent.payload.name}}/config
            payload: |
              {{sensoroptions.battpercent.payload|to_json }}
        - service: mqtt.publish
          data_template:
            topic: "{{statetopic}}/{{sensoroptions.battpercent.payload.name}}"
            payload: "{{triggervalues[sensoroptions.battpercent.payload.name]}}\n"
            retain: false

blueprint:
  name: "Tasmota Sonoff autodiscovery devices"
  description: |

  domain: automation
  input:
    topic:
      name: Tasmota MQTT Topic
      description: "Found in Information tab of the webUI. Warning, it is case sensitive!"
      selector:
        text:
    device_name:
      name: Device name
      description: "Device name"
    device_model:
      name: Device model
      description: "Device model"
      default: "zigbee"
    device_manufactuer:
      name: Device manufactuer
      description: "Device name"
      default: "zigbee"

mode: single
max_exceeded: silent

trigger_variables:
  topic: !input topic

trigger:
  - platform: mqtt
    topic: tele/tasmota_{{topic}}/SENSOR
variables:
  device_topic: !input device_name
  device_manufactuer: !input device_manufactuer
  device_model: !input device_model
  code: "{{(trigger.payload_json.ZbReceived.keys() | list)[0]}}"
  statetopic: tele/zigbee/{{code}}
  availabilitytopic: tele/tasmota_{{topic}}/LWT
  payloadavv: Online
  payloadunavv: Offline
  gendeviceid: {{topic}}{{code}}
  device_name: "{{device_topic}}_{{code}}"
  triggervalues: "{{trigger.payload_json.ZbReceived[code]}}"
  triggerkeys: "{{((trigger.payload_json.ZbReceived.values() | list)[0].keys() | list)}}"
  sensoroptions: >
    {% set options = "{" %}
    {% if 'Temperature' in triggerkeys %}
      {% set options = (options)+'"temperature":{"payload": {
          "device_class": "temperature","name": "Temperature","state_topic":"'+(statetopic)+'/Temperature",
          "unit_of_measurement": "Â°C","unique_id": "'+(code)+'.temp.sensor","availability_topic": "'+(availabilitytopic)+'",
          "payload_available": "'+(payloadavv)+'",
          "payload_not_available": "'+(payloadunavv)+'",
          "dev": {"ids": ["'+(gendeviceid)+'"],"name": "'+(device_name)+'","model": "'+(device_model)+'","manufacturer": "'+(device_manufactuer)+'"}
        }},' %}
    {% endif %}
    {% if 'Humidity' in triggerkeys %}
      {% set options = (options)+'"humidity":{"payload": {
          "device_class": "humidity","name": "Humidity","state_topic":"'+(statetopic)+'/Humidity",
          "unit_of_measurement": "%","unique_id": "'+(code)+'.humid.sensor","availability_topic": "'+(availabilitytopic)+'",
          "payload_available": "'+(payloadavv)+'","payload_not_available": "'+(payloadunavv)+'",
          "dev": {"ids": ["'+(gendeviceid)+'"],"name": "'+(device_name)+'","model": "'+(device_model)+'","manufacturer": "'+(device_manufactuer)+'"}
        }},' %}
    {% endif %}
    {% if 'Contact' in triggerkeys %}
      {% set options = (options)+'"contactsensor":{"payload": {
          "device_class": "opening","name": "Contact","state_topic":"'+(statetopic)+'/Contact",
          "unique_id": "'+(code)+'.contact.sensor",
          "availability_topic": "'+(availabilitytopic)+'",
          "payload_available": "'+(payloadavv)+'",
          "payload_not_available": "'+(payloadunavv)+'",
          "dev": {"ids": ["'+(gendeviceid)+'"],"name": "'+(device_name)+'","model": "'+(device_model)+'","manufacturer": "'+(device_manufactuer)+'"}
        }},' %}
    {% endif %}
    {% if 'Occupancy' in triggerkeys %}
      {% set options = (options)+'"occupancysensor":{"payload": {
          "device_class": "occupancy","name": "Occupancy","state_topic":"'+(statetopic)+'/Occupancy",
          "unique_id": "'+(code)+'.occupancy.sensor",
          "availability_topic": "'+(availabilitytopic)+'",
          "payload_available": "'+(payloadavv)+'",
          "payload_not_available": "'+(payloadunavv)+'",
          "off_delay": 30,
          "dev": {"ids": ["'+(gendeviceid)+'"],"name": "'+(device_name)+'","model": "'+(device_model)+'","manufacturer": "'+(device_manufactuer)+'"}
        }},' %}
    {% endif %}
    {% if 'BatteryPercentage' in triggerkeys %}
      {% set options = (options)+'"battpercent":{"payload": {
          "device_class": "battery","name": "BatteryPercentage","state_topic":"'+(statetopic)+'/BatteryPercentage",
          "unit_of_measurement": "%","unique_id": "'+(code)+'.batteryp.sensor","availability_topic": "'+(availabilitytopic)+'",
          "payload_available": "'+(payloadavv)+'","payload_not_available": "'+(payloadunavv)+'",
          "dev": {"ids": ["'+(gendeviceid)+'"],"name": "'+(device_name)+'","model": "'+(device_model)+'","manufacturer": "'+(device_manufactuer)+'"}
        }},' %}
    {% endif %}
    {% if options.endswith(',') %}
      {% set options = options[:-1] %}
    {% endif %}
    {% set options = (options)+"}" %}
    {% set converted = (options) |from_json  %}
    {{options}}
action:
  choose:
    - conditions:
        - condition: template
          value_template: "{{ 'Humidity' in triggerkeys }}\n"
      sequence:
        - service: mqtt.publish
          data_template:
            retain: true
            topic: homeassistant/sensor/{{code}}{{sensoroptions.humidity.payload.name}}/config
            payload: |
              {{sensoroptions.humidity.payload|to_json }}
        - delay: 00:00:02
        - service: mqtt.publish
          data_template:
            topic: "{{statetopic}}/{{sensoroptions.humidity.payload.name}}"
            payload: "{{triggervalues[sensoroptions.humidity.payload.name]}}\n"
            retain: true
    - conditions:
        - condition: template
          value_template: "{{ 'Temperature' in triggerkeys }}\n"
      sequence:
        - service: mqtt.publish
          data_template:
            retain: true
            topic: homeassistant/sensor/{{code}}{{sensoroptions.temperature.payload.name}}/config
            payload: |
              {{sensoroptions.temperature.payload|to_json }}
        - delay: 00:00:02
        - service: mqtt.publish
          data_template:
            topic: "{{statetopic}}/{{sensoroptions.temperature.payload.name}}"
            payload: "{{triggervalues[sensoroptions.temperature.payload.name]}}\n"
            retain: true
    - conditions:
        - condition: template
          value_template: "{{ 'Contact' in triggerkeys }}\n"
      sequence:
        - service: mqtt.publish
          data_template:
            retain: true
            topic: homeassistant/binary_sensor/{{code}}{{sensoroptions.contactsensor.payload.name}}/config
            payload: |
              {{sensoroptions.contactsensor.payload|to_json }}
        - delay: 00:00:02
        - service: mqtt.publish
          data_template:
            topic: "{{statetopic}}/{{sensoroptions.contactsensor.payload.name}}"
            payload: >-
              {% if triggervalues[sensoroptions.contactsensor.payload.name]|int == 1  %}
                ON
              {% else %} 
                OFF
              {% endif %}
            retain: true
    - conditions:
        - condition: template
          value_template: "{{ 'Occupancy' in triggerkeys }}\n"
      sequence:
        - service: mqtt.publish
          data_template:
            retain: true
            topic: homeassistant/binary_sensor/{{code}}{{sensoroptions.occupancysensor.payload.name}}/config
            payload: |
              {{sensoroptions.occupancysensor.payload|to_json }}
        - delay: 00:00:02
        - service: mqtt.publish
          data_template:
            topic: "{{statetopic}}/{{sensoroptions.occupancysensor.payload.name}}"
            payload: >-
              {% if triggervalues[sensoroptions.occupancysensor.payload.name]|int == 1  %}
                ON
              {% else %} 
                OFF
              {% endif %}
            retain: true
    - conditions:
        - condition: template
          value_template: "{{ 'BatteryPercentage' in triggerkeys }}\n"
      sequence:
        - service: mqtt.publish
          data_template:
            retain: true
            topic: homeassistant/sensor/{{code}}{{sensoroptions.battpercent.payload.name}}/config
            payload: |
              {{sensoroptions.battpercent.payload|to_json }}
        - delay: 00:00:02
        - service: mqtt.publish
          data_template:
            topic: "{{statetopic}}/{{sensoroptions.battpercent.payload.name}}"
            payload: "{{triggervalues[sensoroptions.battpercent.payload.name]}}\n"
            retain: true
